=begin pod

=head1 NAME

B<THIS IS A WORK-IN-PROGRESS: NOT YET RELEASED>

B<RakuFinance> - Show basis, gain/loss, current value, and other data for a portfolio of investments

=head1 SYNOPSIS

=begin code :lang<raku>

use RakuFinance;

=end code

=head1 DESCRIPTION

B<RakuFinance> is a module one can use to calculate various data for a portfolio of investments
including basis, gain/loss, current value, and time-series statistics.

The user has to provide the accepted symbols for his or her securities as well as their buy/sell
data in a comma-separated-value (CSV) file with the appropriate header line (see B<Input Files>)
along with pertinent historical data available from public data sources (see B<Data Sources>).

Note the module is currently designed for the US but should be able to be modified to handle
currency and securities for any country with the help of an interested collaborator. Contact
the author if you are volunteering.

=head2 Transactions

Transactions recognized by this module currently are:

=begin table
Type         | Code 
---          + --- 
Buy          | b 
Sale         | sa 
Split        | sp 
Merger       | m  
Dividend     | d  
Capital gain | c  
=end table

Note transaction codes may be entered in lower- or upper-case.

In addition to the transaction type, each transaction for a security
on the same date has a temporal number to distinguish its order
of execution regardless of type.

The following table shows a hypothetical, abbreviated set of transactions
for security XXX (number of shares, prices, and other transaction data
are not shown).

=begin table
Security | Date       | Trans | Trans
         |            | Code  | Order
---      + ---        + ---   + ---
XXX      | 2022-01-01 | b     | 1
XXX      | 2022-01-01 | d     | 2
XXX      | 2022-01-01 | sp    | 3
XXX      | 2022-01-01 | c     | 4
XXX      | 2022-01-01 | b     | 5
=end table

=head2 Environment Variables

The working directory chosen by the user should be a dedicated directory
with several subdirectories to hold public data of various types. The
user's personal data of buys, holdings, and sales should be
segregated into another directory B<outside of the working 
directory>. The absolute path of that directory should 
be defined in one of the environment variables B<RakuFinanceUserDataDirectory>
[the default] or B<RakuFinanceUserDataFolder>.

=head2 Input Files

Input files can be read from the following financial financial firms:

=item TD Ameritrade
=item Fidelity

Other data formats may be added in the future. Interested users should file
an issue if they are willing to help.

=head2 Data Sources

=head2 Environment Variables

=head2 User Program

An executable Raku program, B<finance>, is installed as part of this module. It provides
modes for calculating the following statistics for a portfolio:

=item 1 - create a CSV file showing all transactions by date, symbol, transaction order (for a single security or all);
=item 3 - create a CSV file showing basis for 
=item 4 - create a CSV file showing current value, gain/loss, basis, and return on investment (for a single security or all)

=head2 Planned Features

=item Live updates via one of several possible free or paid sources
=item Interface with an SQLite database file in GnuCash format (see L<https://gnucash.org>)
=item Accept inputs via a JSON file
=item Output files in JSON format

=head2 User's Configuration File

The B<finance> program requires the user to define his or her commodities
by listing their symbols  
in a confguration file named B<config.ini> located in the working directory.
The file uses a custom INI-style format with comments begining with a '#'
character, two keywords ('hold' and 'reinvest') that are followed by a
space-separated list of symbols.  Following is a simple example:

=begin code
# A list of stocks or mutual funds which 
# ARE NOT reinvested with dividends and capital gains: 
hold:
    T
mrk # commodity symbols are not case-sensitive

# A list of stocks or mutual funds which 
# ARE reinvested with dividends and capital gains: 
reinvest:

=end code

You may use B<finance> to write an empty configuration file by using the 'config' mode
which either checks an existing configuration file or creates an empty one with the
required types of lists.

=head1 CREDITS

The author is indebted to the developers of GnuCash (see L<https://gnucash.org>) for
their account schema for commodities.

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

Copyright 2022 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod

